@model IEnumerable<CPV_Mark3.Models.CaseTable>


@{
    ViewBag.Title = "Home Page";
}
@{
    var groupedData = Model.GroupBy(m => m.FE_Name ?? "(New)");
    
}

<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.1.301/styles/kendo.common.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.1.301/styles/kendo.default.min.css" />

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2022.1.301/js/kendo.all.min.js"></script>
<script src="/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".feList").on("click", function () {
            let fename = $(this).find('td').first().text();

            $.ajax({
                url: '@Url.Action("DisplayFeCount", "Home")?feName=' + fename,
                type: 'GET',
                success: function (res) {
                    $('#overlayFe').html(res);
                    $('#overlayFe').fadeIn(200);

                }
            });

        });      

    })

</script>

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Jaldi&display=swap');
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

    .body-cont1 {
        display: flex;
        padding: 20px 20px;
        flex-direction: column;
    }

    .body-cont2 {
        display: flex;
        border-top: groove;
    }

    .body-content {
        padding: 0px;
        width: 95%;
        height: 90vh;
        background-color: #FFFFFF;
        border-radius: 12px;
        display: flex;
        flex-direction: row;
        overflow: auto;
    }

        .body-content::-webkit-scrollbar {
            width: 0em; /* Adjust the width as needed */
        }

        .body-content::-webkit-scrollbar-track {
            background-color: transparent; /* Hide the scrollbar track */
        }

        /* Define scrollbar thumb styles */
        .body-content::-webkit-scrollbar-thumb {
            background-color: #888; /* Adjust the color as needed */
        }

    .images {
        visibility: hidden;
        position: absolute;
        width: 80px;
        height: 80px;
    }

    .images1 {
        visibility: visible;
        position: absolute;
        width: 80px;
        height: 80px;
    }

    .dash-buttons:hover .images1 {
        visibility: hidden;
    }

    .dash-buttons:hover .images {
        visibility: visible;
    }


    .body-bg {
        height: 70%;
    }

    .dash1 {
        display: flex;
        flex-direction: row;
    }

    .dash-img {
        width: 100px;
        height: 100px;
        display: flex;
        justify-content: center;
        margin-top: 15px;
    }


    .dash-text {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

    .head1 {
        font-size: 16px;
        padding-left: 5px;
        font-weight: 400;
    }

    .head2 {
        font-size: 21px;
        font-weight: 500;
    }

    .dash-buttons:hover {
        background-color: black;
        color: white;
        cursor: pointer;
        transition-duration: 0.5s;
        transition-delay: 0s;
    }



    .body-cont3 {
        width: 85%; /* Adjust width as needed */
        height: max-content;
        margin: 20px 0px 20px 25px;
        padding: 20px;
        border-radius: 10px; /* Optional: Add rounded corners */
        /* background-color: #F2FAF0;*/
        background-color: #EAF6F6;
        border-style: solid;
        border-width: 1px;
        border: 0.5px solid #67919F;
        display: flex;
        flex-direction: row;
        justify-content: center;
        overflow: hidden;
    }



    .SearchBar {
        height: 30px;
        width: 400px !important;
        border-radius: 20px !important;
        font-size: 13px;
        padding-left: 10px;
        background-color: #EAF6F6;
        border: 0.5px solid #67919F;
    }

    input, select, textarea {
        max-width: 700px !important;
    }

    .SearchBar:focus {
        outline: 1px solid black;
    }

    #circle-loader-wrap {
        overflow: hidden;
        position: relative;
        margin-top: -10px;
        width: 155px;
        height: 155px;
        /* box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1) inset; */
        background-color: white;
        border-radius: 200px;
        transform: rotate(180deg);
    }

        #circle-loader-wrap:after {
            content: '';
            position: absolute;
            left: 15px;
            top: 15px;
            width: 125px;
            height: 125px;
            border-radius: 50%;
            background-color: #D9D9D9;
            /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); */
        }

        #circle-loader-wrap div {
            overflow: hidden;
            position: absolute;
            width: 50%;
            height: 100%;
        }

        #circle-loader-wrap .loader {
            position: absolute;
            left: 100%;
            top: 0;
            width: 100%;
            height: 100%;
            border-radius: 1000px;
            background-color: #17ABFF;
        }

        #circle-loader-wrap .left-wrap {
            left: 0;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }

            #circle-loader-wrap .left-wrap .loader {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                transform-origin: 0 50% 0;
                animation: loading-left 4s 1 forwards linear;
            }

        #circle-loader-wrap .right-wrap {
            left: 49%;
        }

            #circle-loader-wrap .right-wrap .loader {
                left: -100%;
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
                transform-origin: 100% 50% 0;
                animation: loading-right 4s 1 forwards linear;
                border-radius: 10px;
            }

    .animate-once .loader {
        animation: none; /* Disable animation */
    }

    @@keyframes loading-left {
        0% {
            transform: rotate(0deg);
        }

        25%, 100% {
            transform: rotate(180deg);
        }
    }

    @@keyframes loading-right {
        0%, 25% {
            transform: rotate(0deg);
        }

        50%, 100% {
            transform: rotate(64.8deg);
        }
    }

    .circular-progress {
        position: relative;
        /*height: 10vw;*/ /* 20% of the viewport height */
        /*width: 10vw;*/ /* 20% of the viewport width */
        height: 25%;
        width: 130%;
        /*max-height: 138px;*/ /* Set a maximum height if needed */
        /*max-width: 135px;*/ /* Set a maximum width if needed */
        border-radius: 50%;
        display: grid;
        place-items: center;
    }

        .circular-progress:before {
            content: "";
            position: absolute;
            height: 79%;
            width: 79%;
            background-color: #ffffff;
            border-radius: 50%;
            background-color: #EEEEEE;
        }

    .value-container {
        position: relative;
        font-family: "Poppins", sans-serif;
        font-size: 42px;
        color: #000000;
        background-color: #EEEEEE;
        font-weight: 800;
        border-radius: 50px;
    }

    .heading {
        color: #3A6C6C;
        font-size: 35px;
        font-family: 'Jaldi', sans-serif;
        text-align: left;
        font-weight: 600;
    }

    .stat0 {
        background-color: white;
        border-radius: 12px;
        /*width: 600px;*/
        width: 95%;
        /* height: 175px;*/
        height: 40%;
        border: 1px groove #CBD5E0;
        margin: 10px 10px;
        padding: 10px 10px;
        overflow: hidden;
        scroll-behavior: smooth;
    }

    .stat1 {
        background-color: white;
        border-radius: 12px;
        /*width: 460px;*/
        width: 85%;
        /* height: 225px;*/
        height: 25vh;
        margin: 10px 10px;
        border: 1px groove #CBD5E0;
        display: flex;
        justify-content: center;
        flex-direction: row;
    }

    .stat2 {
        background-color: white;
        border-radius: 12px;
        /*width: 175px;
        height: 150px;*/
        border: 1px groove #CBD5E0;
        margin: 10px 10px;
        display: flex;
        justify-content: center;
    }

    .stat3 {
        background-color: white;
        border-radius: 12px;
        /*width: 250px;
        height: 420px;*/
        width: 25%;
        height: 92%;
        border: 1px groove #CBD5E0;
        margin: 10px 10px;
        display: flex;
        justify-content: center;
        flex-direction: column;
        padding: 10px;
        overflow: auto;

    }

        .stat3::-webkit-scrollbar {
            width: 0.4em; /* Adjust the width as needed */
        }

        .stat3::-webkit-scrollbar-track {
            background-color: transparent; /* Hide the scrollbar track */
        }

    /* Define scrollbar thumb styles */
        .stat3::-webkit-scrollbar-thumb {
            background-color: #236154; /* Adjust the color as needed */
            border-radius: 12px;
        }

    .stat1-below {
        background-color: #2D6980;
        border-radius: 12px;
        width: 15vh;
        height: 25vh;
        margin: 10px 10px;
        border: 1px groove #CBD5E0;
        display: flex;
        justify-content: center;
        flex-direction: row;
    }

    .dis {
        height: 100%;
        width: 100%;
    }



    table {
        border-collapse: collapse;
        width: 100%;
    }

    table thead{
        position: sticky;
    }

    td{
        border: 0.5px solid #67919F;
        text-align: left;
        border-top: none; /* Remove top border */
        border-right: none; /* Remove right border */
        border-left: none; /* Remove left border */
    }

    th {
        border: none;
        text-align: left;
        border-top: none; /* Remove top border */
        border-right: none; /* Remove right border */
        border-left: none; /* Remove left border */
    }

    tr:first-child td {
        border-top: none; /* Remove top border for the first row */
        border-right: none;
    }

    tr:last-child td {
        border-bottom: none; /* Remove bottom border for the last row */
    }

    td:first-child {
        border-left: none; /* Remove left border for the first column */
    }

    td:last-child {
        border-right: none; /* Remove right border for the last column */
    }

    table tr td {
        text-align: center;
        height: 5px;
        font-family: 'Jaldi', sans-serif;
        font-size: 15px;
        font-weight: 500;
        width: max-content;
        white-space: nowrap;
        color: #3A6C6C;
    }

    .tableHead {
        font-size: 13px;
        font-weight: 700;
        width: max-content;
        white-space: nowrap;
        color: #9B9FA4;
    }

    .sub-head {
        color: #3A6C6C;
        font-size: 14px;
        font-family: 'Jaldi', sans-serif;
        text-align: left;
        font-weight: 600;
    }

    .name-head {
        color: #3A6C6C;
        font-size: 14px;
        font-family: 'Jaldi', sans-serif;
        font-weight: 600;
        padding: 4px 0px;
    }

    #overlayFe {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
        
    }

    /*#overlayfe-content {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 80%;*/ /* Adjust as needed */
        /*max-height: 80vh;*/ /* Adjust as needed */
        /*overflow: hidden;*/ /* Hide overflow at the top level */
        /*background: #fff;*/ /* Adjust background color if needed */
        /*padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        display: flex;
        flex-direction: column;
    }

    .headerfe {
        position: sticky;
        top: 0;
        background: #fff;*/ /* Adjust background color if needed */
        /*z-index: 1;
    }

    .contentfe {
        flex: 1;
        overflow-y: auto;*/ /* Enable scrollbar only for the content */
        /* Additional styles as needed */
    /*}*/

    /*#overlayfe-content {
        background-color: white;*/
        /* width: 350px;
        height: 390px;*/
        /*border-radius: 12px;
        position: absolute;
        margin-top: 300px;
        top: 50px;
        left: 50%;
        transform: translate(-50%, -50%);*/
        /*  color: white;*/
        /*display: flex;
        flex-direction: column;
        justify-content: flex-end;
        z-index: 10;
        max-height: 500px;
        overflow-y: auto;
    }*/
    /*#overlayfe-content {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 80%;*/ /* Adjust as needed */
        /*max-height: 80vh;*/ /* Adjust as needed */
        /*overflow-y: auto;
        background: #fff;*/ /* Adjust background color if needed */
        /*padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    }*/
    #overlayfe-content {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 70%;  
        max-height: 80vh;  
        overflow-y: auto;
        background: #fff;  
        padding: 0px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        display: flex;
        flex-direction: column;
    }

    .headerfe {        
        position: sticky;
        top: 0;
        background: #fff;
        z-index: 1;
    }

    .contentfe {                
        flex: 0;
        overflow-y: auto;
    }

       /* #overlayfe-content::-webkit-scrollbar {
            width: 8px;
        }

        #overlayfe-content::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        #overlayfe-content::-webkit-scrollbar-thumb {
            background: #888;
        }

            #overlayfe-content::-webkit-scrollbar-thumb:hover {
                background: #555;
            }*/

    .feList:hover {
        background-color: aqua;
    }
</style>

<style>
    #circle-loader-wrap1 {
        overflow: hidden;
        position: relative;
        margin-top: -10px;
        width: 125px;
        height: 125px;
        /* box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1) inset; */
        background-color: white;
        border-radius: 200px;
        transform: rotate(180deg);
    }

        #circle-loader-wrap1:after {
            content: '';
            position: absolute;
            left: 15px;
            top: 15px;
            width: 95px;
            height: 95px;
            border-radius: 50%;
            background-color: #D9D9D9;
            /* box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); */
        }

        #circle-loader-wrap1 div {
            overflow: hidden;
            position: absolute;
            width: 50%;
            height: 100%;
        }

        #circle-loader-wrap1 .loader {
            position: absolute;
            left: 100%;
            top: 0;
            width: 100%;
            height: 100%;
            border-radius: 1000px;
            background-color: #17ABFF;
        }

        #circle-loader-wrap1 .left-wrap {
            left: 0;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }

            #circle-loader-wrap1 .left-wrap .loader {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                transform-origin: 0 50% 0;
                animation: loading-left 4s 1 forwards linear;
            }

        #circle-loader-wrap1 .right-wrap {
            left: 49%;
        }

            #circle-loader-wrap1 .right-wrap .loader {
                left: -100%;
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
                transform-origin: 100% 50% 0;
                animation: loading-right 4s 1 forwards linear;
                border-radius: 10px;
            }

    .animate-once .loader {
        animation: none; /* Disable animation */
    }

    @@keyframes loading-left {
        0% {
            transform: rotate(0deg);
        }

        25%, 100% {
            transform: rotate(180deg);
        }
    }

    @@keyframes loading-right {
        0%, 25% {
            transform: rotate(0deg);
        }

        50%, 100% {
            transform: rotate(64.8deg);
        }
    }

    .circular-progress1 {
        position: relative;
        height: 115px;
        width: 113px;
        border-radius: 50%;
        display: grid;
        place-items: center;
    }

        .circular-progress1:before {
            content: "";
            position: absolute;
            height: 79%;
            width: 79%;
            background-color: #ffffff;
            border-radius: 50%;
            background-color: #EEEEEE;
        }

    .value-container1 {
        position: relative;
        font-family: "Poppins", sans-serif;
        font-size: 35px;
        color: #000000;
        background-color: #EEEEEE;
        font-weight: 800;
    }

   
</style>

<div class="body-content">
    <div style=" display: flex; flex-direction: column; width: 85%;">
        <div class="body-cont1">

            <div class="heading">
                <img src="~/Content/Images/ADIB.png" />
            </div>
        </div>


        <div class="body-cont3" style=" padding: 10px;">

            <div>
                <div style="display: flex; flex-direction: row;">

                    <div class="stat0">
                        <div class="sub-head">Daily Stats</div>
                        <div style="display: flex; flex-direction: row; justify-content: space-between; padding: 4px 0px;">
                            <div style="display: flex; flex-direction: column;">
                                <div class="circular-progress1">
                                    <div class="value-container1">0</div>
                                </div>
                                <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Total Applications</span>
                            </div>


                            <div style="display: flex; flex-direction: column;">
                                <div class="circular-progress1">
                                    <div class="value-container1">0</div>
                                </div>
                                <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">On time</span>
                            </div>


                            <div style="display: flex; flex-direction: column;">
                                <div class="circular-progress1">
                                    <div class="value-container1">0</div>
                                </div>
                                <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Under Process</span>
                            </div>


                            <div style="display: flex; flex-direction: column;">
                                <div class="circular-progress1">
                                    <div class="value-container1">0</div>
                                </div>
                                <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Over Due</span>
                            </div>
                        </div>


                    </div>
                </div>

                <div style="display: flex; flex-direction: row;">
                    @*<div class="stat1">
            <canvas id="myChart" style="width: 600px !important;"></canvas>
            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

            <script>
                const ctx = document.getElementById('myChart');

                new Chart(ctx, {
                    data: {
                        datasets: [{
                            type: 'bar',
                            label: 'Total Cases',
                            data: @ViewBag.DashMonth1,
                            //    [12, 19, 3, 5, 2, 13],
                            backgroundColor: [
                                '#165DFF',
                            ],


                        }, {
                            type: 'bar',
                            label: 'Completed Cases',
                            data: @ViewBag.DashMonth2,
                            //    [10, 9, 8, 2, 1, 7],
                            backgroundColor: [
                                '#14C9C9',
                            ],
                        }],
                        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
                    },

                });

            </script>
        </div>*@


                    <div class="stat1">
                        <canvas id="myChart" style="width: 600px !important;"></canvas>
                        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

                        <script>
        const ctx = document.getElementById('myChart');

        new Chart(ctx, {
            type: 'bar',
            data: {
                datasets: [{
                    label: 'Total Cases',
                    data: @ViewBag.DashMonth1,
                    backgroundColor: '#165DFF',
                    borderWidth: 0,  // Remove border lines
                }, {
                    label: 'Completed Cases',
                    data: @ViewBag.DashMonth2,
                    backgroundColor: '#14C9C9',
                    borderWidth: 0,  // Remove border lines
                }],
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
            },
            options: {
                scales: {
                    x: {
                        grid: {
                            display: false  // Hide vertical grid lines
                        }
                    },
                    y: {
                        grid: {
                            display: false  // Hide horizontal grid lines
                        }
                    }
                }
            }
        });
                        </script>
                    </div>

                    <div class="stat1-below">
                    </div>
                </div>


            </div>

            <div class="stat3">
                <div class="sub-head">Field Officer Stats</div>
                <div class="dis">
                    <div class="view">
                        <table>
                            <tr>
                                <td class="tableHead">Employee</td>
                                <td class="tableHead">Total</td>
                                <td class="tableHead">Pending</td>
                            </tr>


                            @foreach (var group in groupedData)
                            {
                                <tr class="feList">
                                    <td class="name-head feName">@group.Key</td>
                                    <td class="name-head">@group.Count()</td>
                                    <td class="name-head">@group.Count(m => m.Final_Status == "Pending")</td>
                                </tr>
                            }


                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style=" display: flex; flex-direction: column; padding: 0px 10px 0px 0px;">

        <div class="body-bg">
            <br>
            <div class="sub-head" style="text-align: end;">Monthly Stats</div>
            <br>
            <div class="circular-progress" @*style="width:160px ; height: 160px; "*@>
                <div class="value-container" style=" font-size: 50px;">0</div>
            </div>
            <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Total Applications</span>


            <br>
            <div class="circular-progress">
                <div class="value-container">0</div>
            </div>
            <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Cases Done</span>
            <br>


            <div class="circular-progress">
                <div class="value-container">0</div>
            </div>
            <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Under Process</span>
            <br>


            <div class="circular-progress">
                <div class="value-container">0</div>
            </div>
            <span style="display: flex; justify-content: center; font-weight: 700; font-size: 12px;">Beyond SLA</span>
        </div>


    </div>

</div>
<div id="overlayFe">

</div>

<script>
    window.addEventListener('load', function () {
        var circleLoader1 = document.getElementById('circle-loader-wrap1');
       // circleLoader1.classList.remove('animate-once'); // Remove the class to disable animation
    });

    let circularProgressBars1 = document.querySelectorAll(".circular-progress1");
    let progressEndValues1 = @ViewBag.DashData;
    let colors1 = ["#17ABFF", "#580058", "#004d06", "#ca0000"]; // Example colors for each progress bar

    let firstProgressBar1 = circularProgressBars1[0];
    let firstProgressEndValue1 = progressEndValues1[0];

    function updateProgressBar(progressBar1, index1) {
        let valueContainer1 = progressBar1.querySelector(".value-container1");
        let progressValue1 = 0;
        let progressEndValue1 = progressEndValues1[index1];
        let color1 = colors1[index1];
        let speed1 = 80; // Adjust this value to control the animation speed. Higher value = slower animation

        valueContainer1.style.color = color1;

        let update = () => {

            valueContainer1.textContent = `${progressValue1}`;
            progressBar1.style.background = `conic-gradient(
            ${color1} ${(progressValue1 / firstProgressEndValue1) * 360}deg,
            #ffffff ${(progressValue1 / firstProgressEndValue1) * 360}deg
        )`;

            if (progressValue1 < progressEndValue1) {
                setTimeout(update, speed1); // Use setTimeout to control the animation speed
            }

            progressValue1++;
        };

        update();
    }

    circularProgressBars1.forEach((progressBar1, index1) => {
        updateProgressBar(progressBar1, index1);
    });
</script>



@*Daily stats JS*@
<script>
    window.addEventListener('load', function () {
        var circleLoader = document.getElementById('circle-loader-wrap');
        //circleLoader.classList.remove('animate-once'); // Remove the class to disable animation
    });

    let circularProgressBars = document.querySelectorAll(".circular-progress");
    let progressEndValues = @ViewBag.DashDataAll;
    //    [47, 20, 11, 6];
    let colors = ["#17ABFF", "#580058", "#004d06", "#ca0000"]; // Example colors for each progress bar

    let firstProgressBar = circularProgressBars[0];
    let firstProgressEndValue = progressEndValues[0];

    function updateProgressBar(progressBar, index) {
        let valueContainer = progressBar.querySelector(".value-container");
        let progressValue = 0;
        let progressEndValue = progressEndValues[index];
        let color = colors[index];
        let speed = 30; // Adjust this value to control the animation speed. Higher value = slower animation

        valueContainer.style.color = color;

        let update = () => {
           
            valueContainer.textContent = `${progressValue}`;
            progressBar.style.background = `conic-gradient(
                ${color} ${(progressValue / firstProgressEndValue) * 360}deg,
                #ffffff ${(progressValue / firstProgressEndValue) * 360}deg
            )`;

            if (progressValue < progressEndValue) {
                setTimeout(update, speed); // Use setTimeout to control the animation speed
            }

            progressValue++;
        };

        update();
    }

    circularProgressBars.forEach((progressBar, index) => {
        updateProgressBar(progressBar, index);
    });
</script>


